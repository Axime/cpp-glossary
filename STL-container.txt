

+++++++++++++++++++++++++++++++++++++++
 sequence container
+++++++++++++++++++++++++++++++++++++++

c.empty() - 判断是否为空
c.size() - 目前的元素个数
c.max_size() - 最大可能数量
c.swap() - 置换数据
c.begin() - 返回一个iterator，指向第一元素
c.end() - 返回一个iterator，指向最末元素
c.cbegin() - 返回一个const iterator，指向第一元素
c.cend() - 返回一个const iterator，指向最末元素
c.clear() - 移除所有元素，令容器为空



====================================================================================================
 <array>
----------------------------------------------------------------------------------------------------
大小固定的顺序数组，array<int, 3> AY = {1,2,3}





====================================================================================================
 <vector> - 重要!!
----------------------------------------------------------------------------------------------------
大小可变化的动态数组，vector<int> AY = {1,2,3}

v.at() - 返回索引处元素
v.front() - 返回第一元素
v.back() - 返回最末元素
v.capacity() - 返回"不进行空间重新分配"条件下的元素最大容纳量
v.reserve() - 扩大容量
v.assign() - 分配数据（重置）
v.push_back() - 加入一个元素至末尾
v.pop_back() - 移除最后一个元素
v.resize() - 设置元素数量（类似Array的length）
v.insert() - 在iterator位置pos的前方插入元素（第一个参数为iterator）
v.erase() - 移除iterator位置pos上的元素
v.emplace() - 
v.emplace_back() - 




====================================================================================================
 <deque>
----------------------------------------------------------------------------------------------------
双向队列（也属于数组），和vector非常相似（接口几乎）一样，元素的访问和迭代器的动作会稍慢









====================================================================================================
 <list>
----------------------------------------------------------------------------------------------------
双向链表

- 不支持随机访问，要访问第5个元素，就要逐一爬过前4个元素
- 任何位置上执行元素的安插和移除都非常快，因为无需移动其他元素

l.push_front() - 加入一个元素至末尾
l.pop_front() - 移除最后一个元素
l.remove(val) - 移除所有其值为val的元素
l.remove_if(op) - 移除所有"造成op结果为true"的元素

l.unique() - 存在相邻而数值或条件为true的元素，就移除重复元素，只留一个
l.splice(pos, lv) - 将lv内所有元素转移（move）到l之内，迭代器pos之前
l.sort() - 对所有元素排序
l.merge() - 合并
l.reverse() - 将所有元素反序





====================================================================================================
 <forward_list>
----------------------------------------------------------------------------------------------------
单向链表

- 不支持反向（reverse）迭代器
- 不提供size()，提高运行效率
- 没有指向最末元素的锚点（anchor）








+++++++++++++++++++++++++++++++++++++++
 associative container
+++++++++++++++++++++++++++++++++++++++

====================================================================================================
 <set>（包含multiset）
----------------------------------------------------------------------------------------------------
主要目的是为了快速检索，不可直接修改键值









====================================================================================================
 <map>（包含multimap）
----------------------------------------------------------------------------------------------------









+++++++++++++++++++++++++++++++++++++++
 unordered container
+++++++++++++++++++++++++++++++++++++++




====================================================================================================
 <unordered_set>（包含unordered_multiset）
----------------------------------------------------------------------------------------------------







====================================================================================================
 <unordered_map>（包含unordered_multimap）
----------------------------------------------------------------------------------------------------





+++++++++++++++++++++++++++++++++++++++
 container adapter
+++++++++++++++++++++++++++++++++++++++

====================================================================================================
 <stack>
----------------------------------------------------------------------------------------------------





====================================================================================================
 <queue>（包含priority_queue）
----------------------------------------------------------------------------------------------------






+++++++++++++++++++++++++++++++++++++++
 specific
+++++++++++++++++++++++++++++++++++++++

====================================================================================================
 <bitset>
----------------------------------------------------------------------------------------------------








